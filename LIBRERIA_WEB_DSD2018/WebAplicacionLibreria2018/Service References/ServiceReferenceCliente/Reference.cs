//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAplicacionLibreria2018.ServiceReferenceCliente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/WScliente.Dominio")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apeMaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string apePaterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string correoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int dniField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nombreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apeMater {
            get {
                return this.apeMaterField;
            }
            set {
                if ((object.ReferenceEquals(this.apeMaterField, value) != true)) {
                    this.apeMaterField = value;
                    this.RaisePropertyChanged("apeMater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string apePater {
            get {
                return this.apePaterField;
            }
            set {
                if ((object.ReferenceEquals(this.apePaterField, value) != true)) {
                    this.apePaterField = value;
                    this.RaisePropertyChanged("apePater");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string correo {
            get {
                return this.correoField;
            }
            set {
                if ((object.ReferenceEquals(this.correoField, value) != true)) {
                    this.correoField = value;
                    this.RaisePropertyChanged("correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int dni {
            get {
                return this.dniField;
            }
            set {
                if ((this.dniField.Equals(value) != true)) {
                    this.dniField = value;
                    this.RaisePropertyChanged("dni");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estado {
            get {
                return this.estadoField;
            }
            set {
                if ((object.ReferenceEquals(this.estadoField, value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idCliente {
            get {
                return this.idClienteField;
            }
            set {
                if ((this.idClienteField.Equals(value) != true)) {
                    this.idClienteField = value;
                    this.RaisePropertyChanged("idCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nombre {
            get {
                return this.nombreField;
            }
            set {
                if ((object.ReferenceEquals(this.nombreField, value) != true)) {
                    this.nombreField = value;
                    this.RaisePropertyChanged("nombre");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCliente.IClientService")]
    public interface IClientService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ObtenerCliente", ReplyAction="http://tempuri.org/IClientService/ObtenerClienteResponse")]
        WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente ObtenerCliente(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ObtenerCliente", ReplyAction="http://tempuri.org/IClientService/ObtenerClienteResponse")]
        System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente> ObtenerClienteAsync(int idCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ListarAllClientes", ReplyAction="http://tempuri.org/IClientService/ListarAllClientesResponse")]
        WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[] ListarAllClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/ListarAllClientes", ReplyAction="http://tempuri.org/IClientService/ListarAllClientesResponse")]
        System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[]> ListarAllClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BuscarCliente", ReplyAction="http://tempuri.org/IClientService/BuscarClienteResponse")]
        WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[] BuscarCliente(string filtro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientService/BuscarCliente", ReplyAction="http://tempuri.org/IClientService/BuscarClienteResponse")]
        System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[]> BuscarClienteAsync(string filtro);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientServiceChannel : WebAplicacionLibreria2018.ServiceReferenceCliente.IClientService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientServiceClient : System.ServiceModel.ClientBase<WebAplicacionLibreria2018.ServiceReferenceCliente.IClientService>, WebAplicacionLibreria2018.ServiceReferenceCliente.IClientService {
        
        public ClientServiceClient() {
        }
        
        public ClientServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente ObtenerCliente(int idCliente) {
            return base.Channel.ObtenerCliente(idCliente);
        }
        
        public System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente> ObtenerClienteAsync(int idCliente) {
            return base.Channel.ObtenerClienteAsync(idCliente);
        }
        
        public WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[] ListarAllClientes() {
            return base.Channel.ListarAllClientes();
        }
        
        public System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[]> ListarAllClientesAsync() {
            return base.Channel.ListarAllClientesAsync();
        }
        
        public WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[] BuscarCliente(string filtro) {
            return base.Channel.BuscarCliente(filtro);
        }
        
        public System.Threading.Tasks.Task<WebAplicacionLibreria2018.ServiceReferenceCliente.Cliente[]> BuscarClienteAsync(string filtro) {
            return base.Channel.BuscarClienteAsync(filtro);
        }
    }
}
